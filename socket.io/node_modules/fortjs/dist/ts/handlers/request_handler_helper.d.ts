/// <reference types="node" />
import { MIME_TYPE, HTTP_METHOD } from "../enums";
import { IComponentProp, IHttpResult } from "../interfaces";
export declare class RequestHandlerHelper {
    protected componentProps: IComponentProp;
    protected controllerResult: IHttpResult;
    get request(): import("http").IncomingMessage;
    get response(): import("http").ServerResponse;
    protected getContentTypeFromNegotiation(type: MIME_TYPE): MIME_TYPE;
    protected getContentTypeFromNegotiationHavingMultipleTypes(types: MIME_TYPE[]): MIME_TYPE;
    private getAvailableTypes_;
    protected onBadRequest(error: any): Promise<void>;
    protected onForbiddenRequest(): Promise<void>;
    protected onNotAcceptableRequest(): Promise<void>;
    protected onNotFound(): Promise<void>;
    protected onMethodNotAllowed(allowedMethods: HTTP_METHOD[]): Promise<void>;
    protected onErrorOccured(error: any): Promise<void>;
    protected onRequestOptions(allowedMethods: HTTP_METHOD[]): void;
    private onResultFromError_;
    setCookie(): void;
    private returnResultFromError_;
    protected handleFormatResult_(shouldSendFirstMatch?: boolean): Promise<void>;
    protected endResponse_(negotiateMimeType: MIME_TYPE): void;
}
