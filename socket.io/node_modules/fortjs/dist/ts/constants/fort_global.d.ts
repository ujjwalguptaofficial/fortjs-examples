import { Logger } from "../models";
import { ViewEngine, ComponentOption } from "../abstracts";
import { TErrorHandler, TGuard, TSessionStore, TShield, TWall, TXmlParser } from "../types";
import { IDtoValidator, IEtagOption, IFolderMap } from "../interfaces";
export declare class FortGlobal {
    port: number;
    viewPath: any;
    shouldParseCookie: boolean;
    shouldParseBody: boolean;
    sessionStore: TSessionStore;
    sessionTimeOut: number;
    viewEngine: ViewEngine;
    walls: TWall[];
    errorHandler: TErrorHandler;
    keepAliveTimeout: number;
    private shields;
    private guards;
    addGuards(guards: TGuard[]): void;
    addShields(shields: TShield[]): void;
    appName: string;
    eTag: IEtagOption;
    folders: IFolderMap[];
    appSessionIdentifier: string;
    xmlParser: TXmlParser;
    logger: Logger;
    validator: IDtoValidator;
    get isDevelopment(): boolean;
    get isProduction(): boolean;
    componentOption: ComponentOption;
    setDefault(): void;
}
export declare const FORT_GLOBAL: FortGlobal;
